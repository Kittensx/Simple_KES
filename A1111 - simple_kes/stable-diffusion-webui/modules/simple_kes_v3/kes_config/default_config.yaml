log_save_directory: "modules/sd_simple_kes/image_generation_data"
graph_save_directory: "modules/sd_simple_kes/image_generation_data"
graph_save_enable: false
load_sigma_cache: false       # Master toggle to enable/disable sigma caching
save_sigma_cache: false      # Whether to save new sigma schedules to file
decay_pattern: "extrapolate"    #Options: zero, soft_landing, extrapolate, and fractional  
decay_mode: "append" 
load_prepass_sigmas: false
save_prepass_sigmas: false

#blend methods  #Key/Value - Options: "karras", "exponential", "geometric", "harmonic", "logarithmic"
#blend weights #Any number between 0 and infinity. Explicit will use that number in relation to the other numbers and give it more weight. Softmax will normalize all values in relation to each other and keep values between 0 and 1.
#if decay_pattern is empty or missing, decay_mode, tail_steps, and decay_rate do not get used. 
#decay rate only affects geometric patterns
allow_step_expansion: false  # Strict A1111 compatibility mode
apply_tail_steps: false         # Append tails from schedulers to sigma sequence
apply_decay_tail: false         # Append decay tails from schedulers to sigma sequence
apply_blended_tail: false       # Blend multiple tails into a single tail, then append
apply_progressive_decay: false  # Gradually apply decay to sigma sequence step-by-step

auto_tail_smoothing: true
auto_tail_threshold: 0.05
jaggedness_threshold: 0.01

auto_stabilization_sequence:
  - smooth_interpolation
  - append_tail
  - blend_tail
  - apply_decay
  - progressive_decay
  
blending_style: 'softmax'  # Options: 'explicit' or 'softmax'
#Valid decay_patterns: 'geometric', 'harmonic', 'extrapolate','fractional', 'logarithmic', 'exponential', 'linear', and 'zero'
#Valid decay_modes: 'append', 'blend', 'replace'
#Valid decay modes compatible with A1111: all if tail_steps is not greater than 1. If any methods add steps that increase steps higher than what was requested, it is not compatible
#decay modes have been tested and they work. However if they increase steps beyond the requested amount, it will not work in the A1111 pipeline. If a pipeline supports increasing steps to have a smoother transition for sigma/noise reduction, then this method would function as intended - to increase steps to have a smoother transition & no jaggedness between steps. 
 
blend_methods:    
  euler:        #if euler was a scheduler - 
    weight: 0.3
    decay_pattern: 'harmonic'
    decay_mode: 'blend'
    tail_steps: 1
    

  euler_advanced: #if euler advanced were a scheduler -
    weight: 0.7
    decay_pattern: 'harmonic'
    decay_mode: 'blend'
    tail_steps: 1
   



blending_mode: "default" # Options: "auto", "default" "smooth_blend", "weights"
#"auto" uses smart weights if more than 2 methods, or smooth blend if exactly two methods
#"default" is karras + exponential for the standard Simple_KES methods which uses smooth_blend_factor
#"smooth_blend" enforces use even with weights included
# "weights" enforces weights even with only 2 methods

smooth_blend_factor_rand: false
smooth_blend_factor_rand_min: 6
smooth_blend_factor_rand_max: 11
smooth_blend_factor: 3
smooth_blend_factor_enable_randomization_type: false
smooth_blend_factor_randomization_type:  "asymmetric"
smooth_blend_factor_randomization_percent: 0.2



skip_prepass: true # has no change to image quality - not currently functioning as intended for early stop purposes
device: "cuda" #cpu or cuda
debug: true
global_randomize: false
#
sigma_scale_factor: 900
sigma_auto_enabled: true
sigma_auto_mode: sigma_min # Options: sigma_min, sigma_max
#
rho_rand: false
rho_rand_min: 3.00 # tested recommended settings threshold
rho_rand_max: 8.00 # tested recommended settings threshold
#rho: 7.571656624637901
rho: 7.959565031107985
rho_enable_randomization_type: false
rho_randomization_type: "log"
rho_randomization_percent: 0.1
#
sigma_min_rand: false
sigma_min_rand_min: 0.001 # tested recommended settings 
sigma_min_rand_max: 0.02 # tested recommended settings threshold
sigma_min: 0.13757067353874633
sigma_min_enable_randomization_type: false
sigma_min_randomization_type:  "asymmetric"
sigma_min_randomization_percent: 0.2
#
sigma_max_rand: false
sigma_max_rand_min: 25 
sigma_max_rand_max: 60
sigma_max: 47.95768510805332
sigma_max_enable_randomization_type: false
sigma_max_randomization_type: "log"
sigma_max_randomization_percent: 0.25
#
start_blend_rand: false
start_blend_rand_min: 0.04 # tested recommended settings threshold
start_blend_rand_max: 0.11 # tested recommended settings threshold
start_blend: 0.05
start_blend_enable_randomization_type: false
start_blend_randomization_type:  "asymmetric"
start_blend_randomization_percent: 0.1
#
end_blend_rand: false
end_blend_rand_min: 0.4 # tested recommended settings threshold
end_blend_rand_max: 0.6 # tested recommended settings threshold
end_blend: 0.4
end_blend_enable_randomization_type: false
end_blend_randomization_type:  "asymmetric"
end_blend_randomization_percent: 0.2
#
sharpness_rand: false
sharpness_rand_min: 0.75 # tested recommended settings threshold
sharpness_rand_max: 0.95 # tested recommended settings threshold
sharpness: 0.85 # Note: Visible changes in image between 2-15. Above 15 - notable differences. At 50+ - poor image quality. sharpness not applied above 0.95
sharpen_variance_threshold: 0.01
sharpen_last_n_steps: 10
sharpen_mode: "full" # Options: last_n, full, both
sharpness_enable_randomization_type: false
sharpness_randomization_type:  "asymmetric"
sharpness_randomization_percent: 0.2
#
step_progress_mode: "sigmoid" # Options supported (default = "linear"), "exponential", "logarithmic", or "sigmoid". If exponential, uses "exp_power"
exp_power: 2
#
initial_step_size_rand: false
initial_step_size_rand_min: 0.7 
initial_step_size_rand_max: 1.0 
initial_step_size: 0.9
initial_step_size_enable_randomization_type: false
initial_step_size_randomization_type: "asymmetric" #assym, symm, log, or exp A/S/L/E 
initial_step_size_randomization_percent: 0.2
#
final_step_size_rand: false
final_step_size_rand_min: 0.1
final_step_size_rand_max: 0.3
final_step_size: 0.20
final_step_size_enable_randomization_type: false
final_step_size_randomization_type:  "asymmetric"
final_step_size_randomization_percent: 0.2
#
step_size_factor_rand: false
step_size_factor_rand_min: 0.65
step_size_factor_rand_max: 0.85
step_size_factor: 0.80814932869181
step_size_factor_enable_randomization_type: false
step_size_factor_randomization_type:  "asymmetric"
step_size_factor_randomization_percent: 0.2
#
initial_noise_scale_rand: false
initial_noise_scale_rand_min: 1.0
initial_noise_scale_rand_max: 1.5
initial_noise_scale: 1.25
initial_noise_scale_enable_randomization_type: false
initial_noise_scale_randomization_type:  "asymmetric"
initial_noise_scale_randomization_percent: 0.2
#
final_noise_scale_rand: false
final_noise_scale_rand_min: 0.6
final_noise_scale_rand_max: 1.0
final_noise_scale: 0.80
final_noise_scale_enable_randomization_type: false
final_noise_scale_randomization_type:  "asymmetric"
final_noise_scale_randomization_percent: 0.2

#
noise_scale_factor_rand: false
noise_scale_factor_rand_min: 0.75
noise_scale_factor_rand_max: 0.95
noise_scale_factor: 0.8113992828873163
noise_scale_factor_enable_randomization_type: false
noise_scale_factor_randomization_type:  "asymmetric"
noise_scale_factor_randomization_percent: 0.2

# Experimental settings
early_stopping_threshold_rand: false
early_stopping_threshold_rand_min: 0.001
early_stopping_threshold_rand_max: 0.02
early_stopping_threshold: 0.06
early_stopping_method: max  # Options: mean, max, sum
sigma_variance_scale: 0.1   # *100 = % of current sigma, increase to reduce false early stopping, try 0.07 or 0.10
safety_minimum_stop_step: 10 # means won't consider until past this step, consider increasing this to increase minimum steps to process the image
recent_change_convergence_delta: 0.6 # this is the change between mean/max variable changes between sigmas. Keep this relatively low. This contributes directly to when we stop.
#min_visual_sigma: 50            # Increase from 10 to push later into the denoising sequence
early_stopping_threshold_enable_randomization_type: false
early_stopping_threshold_randomization_type: "asymmetric"
early_stopping_threshold_randomization_percent: 0.2